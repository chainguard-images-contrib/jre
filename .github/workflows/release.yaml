on:
  push:
    branches:
      - main

    # If README.md is generated by this job, do not re-run
    paths-ignore:
      - README.md

  schedule:
    - cron: '0 0 * * *'

  # Allow manually triggered workflows by maintainers without any
  # parameters to trigger a proactive rebuild (e.g. when a new
  # apko lands)
  workflow_dispatch: {}

name: Create Release

# Don't run multiple releases concurrently.
concurrency: release

jobs:
  build:
    name: Release OCI image
    runs-on: ubuntu-latest

    outputs:
      image-refs: ${{ steps.emit-refs.outputs.image-refs }}

    # https://docs.github.com/en/actions/reference/authentication-in-a-workflow
    permissions:
      id-token: write
      packages: write
      contents: read

    steps:
    - uses: actions/checkout@v3
    - uses: chainguard-images/actions/apko-snapshot@main
      with:
        config: apko.yaml
        base-tag: ghcr.io/${{ github.repository }}
        package-version-tag: openjdk-17-jre
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Emit Image Refs output
      id: emit-refs
      run: |
          cat apko.images | sed 's/$/\n/g' | grep -v '^$' | jq -R -s -c 'split("\n")[:-1]' | jq .
          echo "image-refs=$(cat apko.images | sed 's/$/\n/g' | grep -v '^$' | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
    - name: Additional tags
      uses: chainguard-images/actions/tag@main
      with:
        distroless_image: ghcr.io/${{ github.repository }}
        docker_image: "php"

  scan:
    name: Scan apko images
    needs: build
    runs-on: ubuntu-latest

    # https://docs.github.com/en/actions/reference/authentication-in-a-workflow
    permissions:
      id-token: write
      packages: write
      contents: read

    strategy:
      matrix:
        ref: ${{ fromJson(needs.build.outputs.image-refs) }}
    steps:
      - run: |
          echo ${{ matrix.ref }}
      - uses: chainguard-images/actions/vul-scans@main
        id: scans
        with:
          registry: ghcr.io
          image: ${{ matrix.ref }}
          RUN_SNYK: "false"
          RUN_GRYPE: "true"
          DOCKER_LOGIN: 'true'

      - name: Image Vulnerability scan output
        shell: bash
        env:
          SNYK_COUNT: ${{ steps.scans.outputs.SNYK_COUNT }}
          GRYPE_COUNT: ${{ steps.scans.outputs.GRYPE_COUNT }}
          TRIVY_COUNT: ${{ steps.scans.outputs.TRIVY_COUNT }}
        run: |
          echo "Image Vulnerability scan output" >> $GITHUB_STEP_SUMMARY
          echo "Image ID: ${{ matrix.ref }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Snyk Count: $SNYK_COUNT" >> $GITHUB_STEP_SUMMARY
          echo "Grype Count: $GRYPE_COUNT" >> $GITHUB_STEP_SUMMARY
          echo "Trivy Count: $TRIVY_COUNT" >> $GITHUB_STEP_SUMMARY
